编译bug
原先：
g++ main.cpp -o main -pthread
报错：
对‘http_conn::http_conn()’未定义的引用
对‘http_conn::process()’未定义的引用
解决：
g++ main.cpp http_conn.cpp -o main -pthread，因为没有链接上http_conn.cpp，导致出现错误。

有关类的静态成员变量的问题
类的静态成员变量必须要在类外初始化
在.h头文件中写的类，声明了它的静态成员变量，最好要在它的源文件中进行初始化。
如果在头文件中初始化，则会导致include多次，带来重定义。
不可以在函数中对他初始化，一开始就是在main函数中初始化它，带来了问题。(函数：局部，静态变量:全局)


EPOLLET模式的设定原因，为什么要设置ET模式(线程安全和线程处理逻辑问题)。
为什么要将用于通信的文件描述符设置为非阻塞，这个还需要再去研究一下？
取决于read。必须一次性读完所有数据，因此必须循环去读，一旦正好读完，
接收缓冲区为空，那read就要阻塞，发生下面的问题。
我的理解：read函数无论对于缓冲区数据量很多，所要读的很少，还是对于缓冲区数据量很少，所要读的很多，都不会阻塞。
只要缓冲区有数据，read就不阻塞。
但是一旦缓冲区读完了，相当于对方还没有发来数据，那read就会阻塞等待。而这就造成了线程卡死在这，无法继续处理
其他的客户端请求。因此需要将通信的线程设置为非阻塞。
还有一个问题就是为什么说返回值为0代表对方断开连接，还需要思考！

EPOLLET和ONESHOT区别和联系

为什么用EPOLLET和不用EPOLLET导致的浏览器访问结果截然不同
一旦用了EPOLLET就只能访问一次了，即使访问，也读不到报文信息